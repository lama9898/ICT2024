package inheritance16;

public class Animal {
	// field
	String species;
	int age;
	String gender;
	
	public Animal() { }
	
	// 인자 생성자
	public Animal(String species, int age, String gender) {
		//super();
		this.species = species;
		this.age = age;
		this.gender = gender;
	}
	
	// method
	void printAnimal() {
		System.out.print(String.format("종:%s, 나이:%s, 성별:%s",species,age,gender));
	}

	
}
/*
super키워드:
-인스턴스화된 부모 클래스를 지칭한다.
-즉 부모 클래스의 멤버(인스턴스형 멤버)에 접근할때 사용
-※자식클래스와 부모클래스의 멤버(메소드,변수)명이 동일할때 구분해주기 위한 키워드
-정적 메소드안에서 사용불가(this와 같다)
super():부모의 생성자 호출
               자식의 생성자 안에서만 호출 가능
        this()와 super()동시호출 불가
               자식의 생성자(기본,인자)에서는
        super()로 명시하지 않으면 무조건
              먼저 부모의 기본 생성자를 호출한다.
        super()역시 항상 첫문장으로 기술
 자식의 생성자에서 super()를 명시하지
 않아도
 자동으로 부모의 기본 생성자를 먼저
 호출한다
 만약 부모의 기본 생성자가 아닌 인자
 생성자를 호출하려면
 직접 super(인자들)를 이용해서
 호출해주면 된다.
*/
/*
* =====================================================
*    super()               |    this()
* =========================+===========================
* 부모의 생성자 호출           | 자신의 생성자 호출
* =========================+===========================
* 자식의 생성자 안에서 호출     | 자신의 생성자 안에서 호출
* =========================+===========================
*                항상 첫문장에 기술
* =====================================================
* this()와 super()는 한 생성자 안에서 동시에 호출 불가
* =====================================================
*/